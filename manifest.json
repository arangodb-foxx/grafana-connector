{
  "$schema": "http://json.schemastore.org/foxx-manifest",
  "name": "grafana-connector",
  "description": "Grafana JSON connector for ArangoDB.",
  "version": "3.1.1",
  "thumbnail": "images/grafana.png",
  "engines": {
    "arangodb": "^3.8.0"
  },
  "author": "ArangoDB GmbH",
  "contributors": [
    "Alan Plum <me@pluma.io>",
    "Frank Celler <frank@arangodb.com>"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "configuration": {
    "username": {
      "type": "string",
      "required": false,
      "description": "Username incoming requests should use to authenticate for all queries. If ArangoDB system authentication has been enabled for this service the username can be empty."
    },
    "password": {
      "type": "password",
      "required": false,
      "description": "Password incoming requests should use to authenticate for all queries. If ArangoDB system authentication has been enabled for this service the username can be empty."
    },
    "target": {
      "type": "string",
      "required": true,
      "description": "Name of the target(s) which are shown in the Grafana Metric field. Please note that the name can contain template variables. This can result in multiple targets."
    },
    "alias": {
      "type": "string",
      "required": false,
      "description": "Name of the target(s) as shown in the Grafana graph. Please note that the name can contain template variables. This can be used to create more human readable fields."
    },
    "aggregation": {
      "type": "string",
      "description": "Aggregation functions to use. Should be a comma separated list of AVG, COUNT, COUNT_DISTINCT, MAX, MIN, SORTED_UNIQUE, STDDEV, STDDEV_SAMPLE, SUM, UNIQUE, VARIANCE, VARIANCE_SAMPLE, NONE. You can use '*' to get them all defined except 'NONE'.",
      "default": "SUM",
      "required": false
    },
    "multiValueTemplateVariables": {
      "type": "string",
      "required": false,
      "description": "A comma-separated list of template variables that should be treated as multi-target variables. For example, if you have a Grafana variable 'size' which contains 'small' and 'big', then two runs will be done for the above expressions. The first one will set 'grafana.size' to 'small' and the second to 'big'."
    },
    "query": {
      "type": "string",
      "required": true,
      "description": "The AQL query to get the time-series. The query must not contain a RETURN statement. Instead a variable 'doc' must be defined with two attributes 'time' and 'value'. The query will be augmented with the aggreation defined."
    },
    "hideEmpty": {
      "type": "bool",
      "default": false,
      "required": false,
      "description": "Do not show empty results. This entry will be ignore if logQuery is true."
    },
    "logQuery": {
      "type": "bool",
      "default": false,
      "required": false,
      "description": "Log queries and some more information in the console log and the response."
    },
    "templateVariables": {
      "type": "json",
      "required": false,
      "description": "A JSON object that describes the values for template variables. In Grafana create a Query named QUERY (in Query Options). For each such query, create a key QUERY and an AQL as value. For example, { \"size\": \"FOR doc IN sizes RETURN DISTINCT doc.name\" }."
    }
  }
}
